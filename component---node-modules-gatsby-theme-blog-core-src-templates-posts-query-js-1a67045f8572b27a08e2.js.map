{"version":3,"sources":["webpack:///./src/gatsby-theme-blog/components/home-footer.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-link.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-list.js","webpack:///./node_modules/gatsby-theme-blog/src/components/posts.js","webpack:///./node_modules/gatsby-theme-blog-core/src/templates/posts-query.js","webpack:///./node_modules/gatsby-theme-blog/src/gatsby-theme-blog-core/components/posts.js","webpack:///./node_modules/gatsby-theme-blog/src/components/seo.js"],"names":["socialLinks","css","mt","pt","key","platform","url","href","target","rel","arr","PostLink","title","slug","date","excerpt","h2","sx","mb","a","as","Link","textDecoration","to","p","PostList","posts","map","node","Posts","location","siteTitle","query","PostsPage","data","site","allBlogPost","edges","siteMetadata","social","SEO","description","lang","meta","keywords","imageSource","imageAlt","metaDescription","image","siteUrl","imageAltText","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps"],"mappings":"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","file":"component---node-modules-gatsby-theme-blog-core-src-templates-posts-query-js-1a67045f8572b27a08e2.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { Styled, css } from \"theme-ui\"\n\nconst Footer = ({ socialLinks }) => (\n    <footer\n        css={css({\n            mt: 4,\n            pt: 3,\n        })}\n    >\n        {socialLinks\n            ? socialLinks.map((platform, i, arr) => (\n                <Fragment key={platform.url}>\n                    <Styled.a\n                        href={platform.url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        {platform.name}\n                    </Styled.a>\n                    {arr.length - 1 !== i && (\n                        <Fragment>\n                            {` `}&bull;{` `}\n                        </Fragment>\n                    )}\n                </Fragment>\n            ))\n            : null}\n        <Fragment>\n            {` `}&bull;{` `}\n        </Fragment>\n        <Styled.a\n            href=\"/notes/about\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n        >\n            about me\n        </Styled.a>\n    </footer>\n)\nexport default Footer","/** @jsx jsx */\nimport { Styled, jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\n\nconst PostLink = ({ title, slug, date, excerpt }) => (\n  <div>\n    <Styled.h2\n      sx={{\n        mb: 1,\n      }}\n    >\n      <Styled.a\n        as={Link}\n        sx={{\n          textDecoration: `none`,\n        }}\n        to={slug}\n      >\n        {title || slug}\n      </Styled.a>\n    </Styled.h2>\n    <small>{date}</small>\n    <Styled.p>{excerpt}</Styled.p>\n  </div>\n)\n\nexport default PostLink\n","import React from \"react\"\n\nimport PostLink from \"./post-link\"\n\nconst PostList = ({ posts }) => (\n  <>\n    {posts.map(({ node }) => (\n      <PostLink key={node.slug} {...node} />\n    ))}\n  </>\n)\n\nexport default PostList\n","import React from \"react\"\n\nimport Layout from \"./layout\"\nimport SEO from \"./seo\"\nimport Footer from \"./home-footer\"\nimport PostList from \"./post-list\"\n\nconst Posts = ({ location, posts, siteTitle, socialLinks }) => (\n  <Layout location={location} title={siteTitle}>\n    <SEO title=\"Home\" />\n    <main>\n      <PostList posts={posts} />\n    </main>\n    <Footer socialLinks={socialLinks} />\n  </Layout>\n)\n\nexport default Posts\n","import { graphql } from \"gatsby\"\nimport PostsPage from \"../components/posts\"\n\nexport default PostsPage\n\nexport const query = graphql`\n  query PostsQuery {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    allBlogPost(sort: { fields: [date, title], order: DESC }, limit: 1000) {\n      edges {\n        node {\n          id\n          excerpt\n          slug\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n          tags\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Posts from \"../../components/posts\"\n\nexport default ({ location, data }) => {\n  const { site, allBlogPost } = data\n  return (\n    <Posts\n      location={location}\n      posts={allBlogPost.edges}\n      siteTitle={site.siteMetadata.title}\n      socialLinks={site.siteMetadata.social}\n    />\n  )\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({\n  description,\n  lang,\n  meta,\n  keywords = [],\n  title,\n  imageSource,\n  imageAlt,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const image = imageSource\n    ? `${site.siteMetadata.siteUrl}${imageSource}`\n    : null\n  const imageAltText = imageAlt || metaDescription\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          name: `og:image`,\n          content: image,\n        },\n        {\n          name: `og:image:alt`,\n          content: imageAltText,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:image`,\n          content: image,\n        },\n        {\n          name: `twitter:image:alt`,\n          content: imageAltText,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary_large_image`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n  imageSource: PropTypes.string,\n}\n\nexport default SEO\n"],"sourceRoot":""}