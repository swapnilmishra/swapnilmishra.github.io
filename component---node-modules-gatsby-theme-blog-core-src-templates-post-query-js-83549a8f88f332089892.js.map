{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/gatsby-theme-blog/src/components/seo.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-title.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-date.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-footer.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-hero.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post.js","webpack:///./node_modules/gatsby-theme-blog-core/src/templates/post-query.js","webpack:///./node_modules/gatsby-theme-blog/src/gatsby-theme-blog-core/components/post.js"],"names":["MDXRenderer","require","module","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","SEO","description","lang","meta","keywords","title","imageSource","imageAlt","site","metaDescription","siteMetadata","image","siteUrl","imageAltText","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","$args","push","apply","proto","prototype","instance","result","Function","call","PostTitle","h1","PostDate","p","sx","fontSize","mt","mb","Footer","previous","next","css","pt","hr","as","flexWrap","justifyContent","listStyle","padding","a","Link","to","slug","rel","Hero","post","childImageSharp","fluid","alt","excerpt","Post","data","location","socialImage","src","date","body","PostPage","blogPost","query"],"mappings":"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","file":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js-83549a8f88f332089892.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({\n  description,\n  lang,\n  meta,\n  keywords = [],\n  title,\n  imageSource,\n  imageAlt,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const image = imageSource\n    ? `${site.siteMetadata.siteUrl}${imageSource}`\n    : null\n  const imageAltText = imageAlt || metaDescription\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          name: `og:image`,\n          content: image,\n        },\n        {\n          name: `og:image:alt`,\n          content: imageAltText,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:image`,\n          content: image,\n        },\n        {\n          name: `twitter:image:alt`,\n          content: imageAltText,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary_large_image`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n  imageSource: PropTypes.string,\n}\n\nexport default SEO\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","import React from \"react\"\nimport { Styled } from \"theme-ui\"\n\nconst PostTitle = props => <Styled.h1 {...props} />\n\nexport default PostTitle\n","/** @jsx jsx */\nimport { Styled, jsx } from \"theme-ui\"\n\nconst PostDate = props => (\n  <Styled.p\n    sx={{\n      fontSize: 1,\n      mt: -3,\n      mb: 3,\n    }}\n    {...props}\n  />\n)\n\nexport default PostDate\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { css, Styled, Flex } from \"theme-ui\"\n\nimport Bio from \"../components/bio\"\n\nconst Footer = ({ previous, next }) => (\n  <footer\n    css={css({\n      mt: 4,\n      pt: 3,\n    })}\n  >\n    <Styled.hr />\n    <Bio />\n    {(previous || next) && (\n      <Flex\n        as=\"ul\"\n        css={css({\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          padding: 0,\n        })}\n      >\n        <li>\n          {previous && (\n            <Styled.a as={Link} to={previous.slug} rel=\"prev\">\n              ← {previous.title}\n            </Styled.a>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Styled.a as={Link} to={next.slug} rel=\"next\">\n              {next.title} →\n            </Styled.a>\n          )}\n        </li>\n      </Flex>\n    )}\n  </footer>\n)\n\nexport default Footer\n","import React from \"react\"\nimport Image from \"gatsby-image\"\n\nconst Hero = ({ post }) => (\n  <>\n    {post?.image?.childImageSharp && (\n      <Image\n        fluid={post.image.childImageSharp.fluid}\n        alt={post.imageAlt ? post.imageAlt : post.excerpt}\n      />\n    )}\n  </>\n)\n\nexport default Hero\n","import React from \"react\"\n\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\n\nimport Layout from \"./layout\"\nimport SEO from \"./seo\"\nimport PostTitle from \"./post-title\"\nimport PostDate from \"./post-date\"\nimport PostFooter from \"./post-footer\"\nimport PostHero from \"./post-hero\"\n\nconst Post = ({\n  data: {\n    post,\n    site: {\n      siteMetadata: { title },\n    },\n  },\n  location,\n  previous,\n  next,\n}) => (\n  <Layout location={location} title={title}>\n    <SEO\n      title={post.title}\n      description={post.excerpt}\n      imageSource={\n        post.socialImage\n          ? post.socialImage?.childImageSharp?.fluid.src\n          : post.image?.childImageSharp?.fluid.src\n      }\n      keywords={post.keywords}\n      imageAlt={post.imageAlt}\n    />\n    <main>\n      <PostHero post={post} />\n      <PostTitle>{post.title}</PostTitle>\n      <PostDate>{post.date}</PostDate>\n      <MDXRenderer>{post.body}</MDXRenderer>\n    </main>\n    <PostFooter {...{ previous, next }} />\n  </Layout>\n)\n\nexport default Post\n","import { graphql } from \"gatsby\"\nimport PostPage from \"../components/post\"\n\nexport default PostPage\n\nexport const query = graphql`\n  query PostPageQuery($id: String!, $previousId: String, $nextId: String) {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    blogPost(id: { eq: $id }) {\n      id\n      excerpt\n      body\n      slug\n      title\n      tags\n      keywords\n      date(formatString: \"MMMM DD, YYYY\")\n      image {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      imageAlt\n      socialImage {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n    previous: blogPost(id: { eq: $previousId }) {\n      id\n      excerpt\n      slug\n      title\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n    next: blogPost(id: { eq: $nextId }) {\n      id\n      excerpt\n      slug\n      title\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n  }\n`\n","import React from \"react\"\nimport Post from \"../../components/post\"\n\nexport default ({ location, data }) => {\n  const { blogPost, previous, next } = data\n\n  return (\n    <Post\n      data={{ ...data, post: blogPost }}\n      location={location}\n      previous={previous}\n      next={next}\n    />\n  )\n}\n"],"sourceRoot":""}